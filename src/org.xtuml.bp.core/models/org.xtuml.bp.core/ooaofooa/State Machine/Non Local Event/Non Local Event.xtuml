-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	'Non Local Event',
	526,
	'SM_NLEVT',
	'A non-local event is one that is defined in another state machine.  Non-local events represent entries in SEMs for events that are defined in a super-type but used on transitions in the sub-type.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("a8cbc327-9736-4903-a1d2-904804621abf",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'get_name',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'select one evt related by self->SM_SEVT[R526]->SM_EVT[R525];
return evt.get_name();
',
	1,
	'',
	"ddbcdaa9-37a5-4b35-a11d-7f9e96226d5f",
	0);
INSERT INTO O_TFR
	VALUES ("ddbcdaa9-37a5-4b35-a11d-7f9e96226d5f",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'dispose',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one sevt related by self->SM_SEVT[R526];
unrelate self from sevt across R526;
select one evt related by sevt->SM_EVT[R525];
if(not_empty evt)
  evt.dispose();
end if;
select one pevt related by self->SM_PEVT[R527];
if (not_empty pevt)
  unrelate self from pevt across R527;
  pevt.migrateToLocalEvent();
end if;
delete object instance self;
',
	1,
	'',
	"0d2bb15f-99d0-4848-8705-6564141d5e65",
	0);
INSERT INTO O_TFR
	VALUES ("fd636efe-e7fc-4a86-83fa-5523da91d788",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'checkIfNoLongerAssigned',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'/*
Checks to see if this non-local event is no longer assigned anywhere in its
state machine, and if so, disposes of it.  Further, if this event is disposed,
then if it was the last alias of its associated polymorphic event, then that
polymorphic event is migrated back to a local event.
*/

// if this transition has the last assignment (or marked-as-ignored status)
// of the non-local event within this transitions''s state machine 
select many assignments related by self->SM_SEVT[R526]->SM_SEME[R503]->SM_NSTXN[R504];
select many ignores related by self->SM_SEVT[R526]->SM_SEME[R503]->SM_EIGN[R504];
if (empty assignments and empty ignores)
	// destroy the non-local event
	select one event related by self->SM_SEVT[R526]->SM_EVT[R525];
	select one polyEvent related by self->SM_PEVT[R527];
	event.dispose();
	
    polyEvent.migrateToLocalEvent();
end if;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("505a3a64-fc3d-46c0-81c5-317cd5b226e5",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'resolveInheritedEvent',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one poly related by self->SM_PEVT[R527];
if(not_empty poly and not Util::isProxy(element:self.convertToInstance()))
  remove = false;
  select one evt related by poly->SM_EVT[R525];
  select one nlevt related by self->SM_SEVT[R526]->SM_EVT[R525];
  select one sm related by nlevt->SM_SM[R502];
  select one clazz related by sm->SM_ASM[R517]->O_OBJ[R519];
  if(empty clazz)
    select one clazz related by sm->SM_ISM[R517]->O_OBJ[R518];
  end if;
  select any superClass from instances of O_OBJ where (selected.Obj_ID == GD::NULL_UNIQUE_ID());
  if(not_empty evt)
    select one superSm related by evt->SM_SM[R502];
    select one superClass related by superSm->SM_ASM[R517]->O_OBJ[R519];
    if(empty superClass)
      select one superClass related by superSm->SM_ISM[R517]->O_OBJ[R518];
    end if;
    if(not_empty superClass)
      if(not (superClass.isSupertypeOf(classId:clazz.Obj_ID) or superClass.Obj_ID == clazz.Obj_ID))
        // the supertype was not resolved, the would indicate
        // that the supertype/subtype association was not fully
        // copied
        remove = true;
      else
       if(not Util::isProxy(element:evt.convertToInstance()))
         // if the event is not a proxy it has already been
         // resolved
         return;
        end if;
        // the supertype was resolved, but may actually be imported
        // in which case we need to trigger imported class resolution
        // and determine if the resolved model class has a matching
        // event
        select one originalClass related by evt->SM_SM[R502]->SM_ISM[R517]
      		->O_OBJ[R518];
        iobjID = clazz.findImportedSupertypeClass(supertypeClassId:originalClass.Obj_ID);
        if(iobjID != GD::NULL_UNIQUE_ID())
          // if the imported class was found
          // and is not the same class
          select any iobj from instances of O_IOBJ where (selected.IObj_ID == iobjID);
          // the subsystems should match for both the imported class
          // which represents the supertype and the subtype class
          // if not we are pasting both classes and the imported
          // class has not been related to the new subsystem yet
          // we do that now.
          iobj.resolveModelClass();
          select one resolvedClass related by iobj->O_OBJ[R101];
          if(empty resolvedClass)
            remove = true;
          else
            if(originalClass != resolvedClass)
              select many otherNLevts related by sm->SM_EVT[R502]->SM_SEVT[R525]->SM_NLEVT[R526];
              for each otherNLevt in otherNLevts
                select one otherSuperSM related by otherNLevt->SM_PEVT[R527]->SM_EVT[R525]->SM_SM[R502];
                if(superSm == otherSuperSM)
                  select one otherEvt related by otherNLevt->SM_SEVT[R526]->SM_EVT[R525];
                  select any transition related by otherEvt->SM_SEVT[R525]->SM_SEME[R503]
            	      ->SM_NSTXN[R504]->SM_TXN[R507]; 
                  id = transition.locateMatchingPolymorphicEvent(id:otherEvt.SMevt_ID);
                  if(id != GD::NULL_UNIQUE_ID())
                    select any resolvedEvent from instances of SM_EVT where (selected.SMevt_ID == id);
                    if(not_empty resolvedEvent)
                      // if the polymorphic instance does not exist for the
                      // resolved event, create it now
                      select one polyEvt related by resolvedEvent->SM_PEVT[R525];
                      if(empty polyEvt)
                        create object instance polyEvt of SM_PEVT;
                        select one matrixEvent related by resolvedEvent->SM_SEVT[R525];
                        matrixEvent.dispose();
                        relate polyEvt to resolvedEvent across R525;
                      end if;
                      unrelate poly from otherNLevt across R527;
                      relate polyEvt to otherNLevt across R527;
                    else
                      // no polymorphic event could be resolved
                      // delete the event
                      message = ::getMissingInheritedEventMessage(missingInheritedEvent:true);
                      // add message to a list that will display in a warning dialog at
                      // the end of the paste operation
                      Util::addPastedElementToProblemList(elementName:evt.get_name(), message:message);
                      otherNLevt.dispose();
                    end if;
                  end if;                
                end if;
              end for;
            end if;
          end if;
        end if;
      end if;
    else
      // the supertype class was not copied as well
      remove = true;
    end if;
  else
    remove = true;
  end if;
  if(remove)
    // no polymorphic event could be resolved
    // delete remove the event from the transition
    // which will also delete the non-local event
    message = ::getMissingInheritedEventMessage(missingInheritedEvent:true);
    evtName = nlevt.get_name();
    if (not_empty evt)
      evtName = evt.get_name();
    end if;
    // add message to a list that will display in a warning dialog at
    // the end of the paste operation
    Util::addPastedElementToProblemList(elementName:evtName, message:message);
    nlevt.dispose();
  end if;
end if;',
	1,
	'',
	"a8cbc327-9736-4903-a1d2-904804621abf",
	0);
INSERT INTO O_TFR
	VALUES ("0d2bb15f-99d0-4848-8705-6564141d5e65",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'convertToInstance',
	'Translate:native',
	"bc3722c8-5188-4529-8519-cf9eb9816b17",
	1,
	'return this;',
	0,
	'',
	"fd636efe-e7fc-4a86-83fa-5523da91d788",
	0);
INSERT INTO S_DT_PROXY
	VALUES ("bc3722c8-5188-4529-8519-cf9eb9816b17",
	"00000000-0000-0000-0000-000000000000",
	'instance',
	'',
	'',
	'../../Datatypes/Datatypes.xtuml');
INSERT INTO O_TFR
	VALUES ("e1cbf72c-aaee-4f58-b0a8-6c813f1a38c1",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'hasNonLocalPoly',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'select one pevt related by self->SM_PEVT[R527];
return pevt.SM_ID != self.SM_ID;',
	1,
	'',
	"505a3a64-fc3d-46c0-81c5-317cd5b226e5",
	0);
INSERT INTO O_TFR
	VALUES ("2319b2a1-8fe1-4a83-a7e8-3fabf22a524a",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'canDelete',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'// do not allow deletion of non-local events when concrete polys are enabled
select one system related by self->SM_SEVT[R526]->SM_EVT[R525]->SM_SM[R502]->SM_ISM[R517]->O_OBJ[R518]->PE_PE[R8001]->EP_PKG[R8000]->S_SYS[R1405];
if ( not_empty system and PREF::getBoolean( name:"bridgepoint_prefs_allow_concrete_polys" ) )
  return false;
else
  return true;
end if;',
	1,
	'',
	"e1cbf72c-aaee-4f58-b0a8-6c813f1a38c1",
	0);
INSERT INTO O_REF
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	"173a203b-677e-4e60-8aeb-678f4fd25f4b",
	0,
	"25e36154-e4f3-4e93-bee4-fb77e57fc9ba",
	"baafef87-a341-4750-942e-5915815d5871",
	"e52530da-8aed-4cc1-be77-9a881415e4ae",
	"0e8212ec-45ce-4bf6-8384-52958edd0bd0",
	"2b828a64-af30-4eff-83b0-c3f104b24e15",
	"a108931f-33a8-4af9-a9a3-c7d8e25375fd",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'SEM Event',
	'SMevt_ID',
	'R526');
INSERT INTO R_RGO_PROXY
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	"baafef87-a341-4750-942e-5915815d5871",
	"e52530da-8aed-4cc1-be77-9a881415e4ae",
	'../State Machine.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("25e36154-e4f3-4e93-bee4-fb77e57fc9ba",
	"173a203b-677e-4e60-8aeb-678f4fd25f4b",
	0,
	"baafef87-a341-4750-942e-5915815d5871",
	"0e8212ec-45ce-4bf6-8384-52958edd0bd0",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("2b828a64-af30-4eff-83b0-c3f104b24e15",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"230b2bab-457c-4eae-bfe1-b824ac2f5324",
	"31832e28-c7f1-4e83-9c56-28614980fb33",
	1,
	'SMevt_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("230b2bab-457c-4eae-bfe1-b824ac2f5324",
	"31832e28-c7f1-4e83-9c56-28614980fb33",
	'../State Machine Event/State Machine Event.xtuml');
INSERT INTO O_ATTR
	VALUES ("2b828a64-af30-4eff-83b0-c3f104b24e15",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"00000000-0000-0000-0000-000000000000",
	'SMevt_ID',
	'',
	'',
	'SMevt_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	"173a203b-677e-4e60-8aeb-678f4fd25f4b",
	0,
	"01cfc2e8-3915-4014-a076-6a72289b6711",
	"baafef87-a341-4750-942e-5915815d5871",
	"e52530da-8aed-4cc1-be77-9a881415e4ae",
	"0e8212ec-45ce-4bf6-8384-52958edd0bd0",
	"a841c515-0fc9-4318-9f3e-54a46e9ba910",
	"d0f2ac8c-285a-4394-a1ec-ad611ac82ff2",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'SEM Event',
	'SM_ID',
	'R526');
INSERT INTO O_RTIDA_PROXY
	VALUES ("01cfc2e8-3915-4014-a076-6a72289b6711",
	"173a203b-677e-4e60-8aeb-678f4fd25f4b",
	0,
	"baafef87-a341-4750-942e-5915815d5871",
	"0e8212ec-45ce-4bf6-8384-52958edd0bd0",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("a841c515-0fc9-4318-9f3e-54a46e9ba910",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"a791a1ed-e1c8-4d68-9963-2e6d2379b544",
	"92c4f346-0aca-4da2-b132-f4de66fee3e6",
	1,
	'SM_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("a791a1ed-e1c8-4d68-9963-2e6d2379b544",
	"92c4f346-0aca-4da2-b132-f4de66fee3e6",
	'../State Machine/State Machine.xtuml');
INSERT INTO O_ATTR
	VALUES ("a841c515-0fc9-4318-9f3e-54a46e9ba910",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"2b828a64-af30-4eff-83b0-c3f104b24e15",
	'SM_ID',
	'',
	'',
	'SM_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	"173a203b-677e-4e60-8aeb-678f4fd25f4b",
	0,
	"239f092c-05ab-4f4e-9f0d-5d95e01dc387",
	"baafef87-a341-4750-942e-5915815d5871",
	"e52530da-8aed-4cc1-be77-9a881415e4ae",
	"0e8212ec-45ce-4bf6-8384-52958edd0bd0",
	"00282c3f-7b25-4908-a005-e535d8794fd6",
	"d9d0ac49-6b35-4a9a-bb3e-7cf33dd0b093",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'SEM Event',
	'SMspd_ID',
	'R526');
INSERT INTO O_RTIDA_PROXY
	VALUES ("239f092c-05ab-4f4e-9f0d-5d95e01dc387",
	"173a203b-677e-4e60-8aeb-678f4fd25f4b",
	0,
	"baafef87-a341-4750-942e-5915815d5871",
	"0e8212ec-45ce-4bf6-8384-52958edd0bd0",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("00282c3f-7b25-4908-a005-e535d8794fd6",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"6a29b768-e433-4a27-9b47-12b1d34fd0ae",
	"a4e6c94c-670a-4e7f-b085-6727308a33db",
	1,
	'SMspd_ID');
INSERT INTO O_BATTR_PROXY
	VALUES ("6a29b768-e433-4a27-9b47-12b1d34fd0ae",
	"a4e6c94c-670a-4e7f-b085-6727308a33db",
	'../Event Supplemental Data/Event Supplemental Data.xtuml');
INSERT INTO O_ATTR
	VALUES ("00282c3f-7b25-4908-a005-e535d8794fd6",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"a841c515-0fc9-4318-9f3e-54a46e9ba910",
	'SMspd_ID',
	'',
	'',
	'SMspd_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	"f9c92898-9f91-432f-9b52-986629847b3d",
	0,
	"c91419df-b6e2-4003-ac19-64c503b2c2fe",
	"468067e5-bf0f-4a0c-9637-b49a05af6d02",
	"83921e0e-5b33-4e27-a5b9-14f55b914f84",
	"ddbe2967-ee93-4535-9fb7-f769fe860fde",
	"ff8e23ad-fbf0-474a-9b3b-3c4fd18b0b1b",
	"9f849c1f-db9a-493b-abd4-22bdfcf22471",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Polymorphic Event',
	'SMevt_ID',
	'R527.''is defined by''');
INSERT INTO R_RGO_PROXY
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	"468067e5-bf0f-4a0c-9637-b49a05af6d02",
	"83921e0e-5b33-4e27-a5b9-14f55b914f84",
	'../State Machine.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("c91419df-b6e2-4003-ac19-64c503b2c2fe",
	"f9c92898-9f91-432f-9b52-986629847b3d",
	0,
	"468067e5-bf0f-4a0c-9637-b49a05af6d02",
	"ddbe2967-ee93-4535-9fb7-f769fe860fde",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("ff8e23ad-fbf0-474a-9b3b-3c4fd18b0b1b",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"230b2bab-457c-4eae-bfe1-b824ac2f5324",
	"31832e28-c7f1-4e83-9c56-28614980fb33",
	1,
	'SMevt_ID');
INSERT INTO O_ATTR
	VALUES ("ff8e23ad-fbf0-474a-9b3b-3c4fd18b0b1b",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"00282c3f-7b25-4908-a005-e535d8794fd6",
	'polySMevt_ID',
	'

',
	'poly',
	'SMevt_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	"f9c92898-9f91-432f-9b52-986629847b3d",
	0,
	"b46cd5d4-569f-4ef2-bb98-91374786b835",
	"468067e5-bf0f-4a0c-9637-b49a05af6d02",
	"83921e0e-5b33-4e27-a5b9-14f55b914f84",
	"ddbe2967-ee93-4535-9fb7-f769fe860fde",
	"d6c31a32-270a-4972-bd1c-1d067309566d",
	"5e048845-3566-4172-937d-233e4dcc2b1d",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Polymorphic Event',
	'SM_ID',
	'R527.''is defined by''');
INSERT INTO O_RTIDA_PROXY
	VALUES ("b46cd5d4-569f-4ef2-bb98-91374786b835",
	"f9c92898-9f91-432f-9b52-986629847b3d",
	0,
	"468067e5-bf0f-4a0c-9637-b49a05af6d02",
	"ddbe2967-ee93-4535-9fb7-f769fe860fde",
	'../State Machine.xtuml');
INSERT INTO O_RATTR
	VALUES ("d6c31a32-270a-4972-bd1c-1d067309566d",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"a791a1ed-e1c8-4d68-9963-2e6d2379b544",
	"92c4f346-0aca-4da2-b132-f4de66fee3e6",
	1,
	'SM_ID');
INSERT INTO O_ATTR
	VALUES ("d6c31a32-270a-4972-bd1c-1d067309566d",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"ff8e23ad-fbf0-474a-9b3b-3c4fd18b0b1b",
	'polySM_ID',
	'

',
	'poly',
	'SM_ID',
	1,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("4b58c79a-bcb7-469c-aa24-e73b04d0b3d5",
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO O_BATTR
	VALUES ("4b58c79a-bcb7-469c-aa24-e73b04d0b3d5",
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO O_ATTR
	VALUES ("4b58c79a-bcb7-469c-aa24-e73b04d0b3d5",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"d6c31a32-270a-4972-bd1c-1d067309566d",
	'polySMspd_ID',
	'This attribute is only here for backwards compatibility.

',
	'',
	'polySMspd_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("23907323-91b4-4181-a55d-6b30eba40035",
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO O_BATTR
	VALUES ("23907323-91b4-4181-a55d-6b30eba40035",
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO O_ATTR
	VALUES ("23907323-91b4-4181-a55d-6b30eba40035",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"4b58c79a-bcb7-469c-aa24-e73b04d0b3d5",
	'Local_Meaning',
	'User_Visible:false
Full Name: Non-Local Event Local Meaning
Description: The local meaning of the non-local event.  The meaning can be overridden in the sup-types state machine.',
	'',
	'Local_Meaning',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_DBATTR
	VALUES ("9e717c7c-561d-4009-a80b-96572647a9ab",
	"8f39b160-16d1-419f-9067-069b2d461008",
	'select one evt related by self->SM_SEVT[R526]->SM_EVT[R525];
if(not_empty evt)
  self.Name = evt.get_name();
else
  self.Name = ::getOrphanedElementName();
end if;',
	1,
	0);
INSERT INTO O_BATTR
	VALUES ("9e717c7c-561d-4009-a80b-96572647a9ab",
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO O_ATTR
	VALUES ("9e717c7c-561d-4009-a80b-96572647a9ab",
	"8f39b160-16d1-419f-9067-069b2d461008",
	"23907323-91b4-4181-a55d-6b30eba40035",
	'Name',
	'readonly:true
Persistent:false
Full Name: Name',
	'',
	'Name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO O_OIDA
	VALUES ("00282c3f-7b25-4908-a005-e535d8794fd6",
	"8f39b160-16d1-419f-9067-069b2d461008",
	0,
	'SMspd_ID');
INSERT INTO O_OIDA
	VALUES ("a841c515-0fc9-4318-9f3e-54a46e9ba910",
	"8f39b160-16d1-419f-9067-069b2d461008",
	0,
	'SM_ID');
INSERT INTO O_OIDA
	VALUES ("2b828a64-af30-4eff-83b0-c3f104b24e15",
	"8f39b160-16d1-419f-9067-069b2d461008",
	0,
	'SMevt_ID');
INSERT INTO O_ID
	VALUES (1,
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO O_ID
	VALUES (2,
	"8f39b160-16d1-419f-9067-069b2d461008");
INSERT INTO PE_PE
	VALUES ("8f39b160-16d1-419f-9067-069b2d461008",
	1,
	"efdb28f6-a485-4b25-9cbf-3e7227398b6a",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("efdb28f6-a485-4b25-9cbf-3e7227398b6a",
	"00000000-0000-0000-0000-000000000000",
	"d9bc5487-4193-4817-be1c-6c3f3339aebf",
	'State Machine',
	'Classes (O_OBJ) that have interesting behavior are given lifecycles. These lifecycles are described using state machines (SM_SM). A state machine consists of states, events, transitions and state actions. The state machine exists for each instance of the class for which it has been modeled (SM_ISM). A state machine can also be an assigner state machine (SM_ASM) of which only one can exists for all class instances. The purpose of the assigner state machine is to act as a single point of control through which competing requests are serialized.',
	501,
	'../State Machine.xtuml');
