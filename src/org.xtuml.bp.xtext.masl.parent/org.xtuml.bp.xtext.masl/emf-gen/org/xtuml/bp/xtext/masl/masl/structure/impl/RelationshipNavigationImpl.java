/**
 * generated by Xtext 2.9.2
 */
package org.xtuml.bp.xtext.masl.masl.structure.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtuml.bp.xtext.masl.masl.structure.ObjectOrRole;
import org.xtuml.bp.xtext.masl.masl.structure.RelationshipDefinition;
import org.xtuml.bp.xtext.masl.masl.structure.RelationshipNavigation;
import org.xtuml.bp.xtext.masl.masl.structure.StructurePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relationship Navigation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.RelationshipNavigationImpl#getRelationship <em>Relationship</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.masl.structure.impl.RelationshipNavigationImpl#getObjectOrRole <em>Object Or Role</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationshipNavigationImpl extends MinimalEObjectImpl.Container implements RelationshipNavigation {
	/**
	 * The cached value of the '{@link #getRelationship() <em>Relationship</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRelationship()
	 * @generated
	 * @ordered
	 */
	protected RelationshipDefinition relationship;

	/**
	 * The cached value of the '{@link #getObjectOrRole() <em>Object Or Role</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getObjectOrRole()
	 * @generated
	 * @ordered
	 */
	protected ObjectOrRole objectOrRole;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationshipNavigationImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return StructurePackage.Literals.RELATIONSHIP_NAVIGATION;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RelationshipDefinition getRelationship() {
		if (relationship != null && relationship.eIsProxy()) {
			InternalEObject oldRelationship = (InternalEObject)relationship;
			relationship = (RelationshipDefinition)eResolveProxy(oldRelationship);
			if (relationship != oldRelationship) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, StructurePackage.RELATIONSHIP_NAVIGATION__RELATIONSHIP, oldRelationship, relationship));
			}
		}
		return relationship;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RelationshipDefinition basicGetRelationship() {
		return relationship;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setRelationship(RelationshipDefinition newRelationship) {
		RelationshipDefinition oldRelationship = relationship;
		relationship = newRelationship;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.RELATIONSHIP_NAVIGATION__RELATIONSHIP, oldRelationship, relationship));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectOrRole getObjectOrRole() {
		if (objectOrRole != null && objectOrRole.eIsProxy()) {
			InternalEObject oldObjectOrRole = (InternalEObject)objectOrRole;
			objectOrRole = (ObjectOrRole)eResolveProxy(oldObjectOrRole);
			if (objectOrRole != oldObjectOrRole) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, StructurePackage.RELATIONSHIP_NAVIGATION__OBJECT_OR_ROLE, oldObjectOrRole, objectOrRole));
			}
		}
		return objectOrRole;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ObjectOrRole basicGetObjectOrRole() {
		return objectOrRole;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setObjectOrRole(ObjectOrRole newObjectOrRole) {
		ObjectOrRole oldObjectOrRole = objectOrRole;
		objectOrRole = newObjectOrRole;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, StructurePackage.RELATIONSHIP_NAVIGATION__OBJECT_OR_ROLE, oldObjectOrRole, objectOrRole));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_NAVIGATION__RELATIONSHIP:
				if (resolve) return getRelationship();
				return basicGetRelationship();
			case StructurePackage.RELATIONSHIP_NAVIGATION__OBJECT_OR_ROLE:
				if (resolve) return getObjectOrRole();
				return basicGetObjectOrRole();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_NAVIGATION__RELATIONSHIP:
				setRelationship((RelationshipDefinition)newValue);
				return;
			case StructurePackage.RELATIONSHIP_NAVIGATION__OBJECT_OR_ROLE:
				setObjectOrRole((ObjectOrRole)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_NAVIGATION__RELATIONSHIP:
				setRelationship((RelationshipDefinition)null);
				return;
			case StructurePackage.RELATIONSHIP_NAVIGATION__OBJECT_OR_ROLE:
				setObjectOrRole((ObjectOrRole)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case StructurePackage.RELATIONSHIP_NAVIGATION__RELATIONSHIP:
				return relationship != null;
			case StructurePackage.RELATIONSHIP_NAVIGATION__OBJECT_OR_ROLE:
				return objectOrRole != null;
		}
		return super.eIsSet(featureID);
	}

} //RelationshipNavigationImpl
