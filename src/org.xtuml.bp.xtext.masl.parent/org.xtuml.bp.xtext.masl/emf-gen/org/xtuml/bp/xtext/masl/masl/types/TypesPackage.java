/**
 * generated by Xtext 2.9.2
 */
package org.xtuml.bp.xtext.masl.masl.types;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.xtuml.bp.xtext.masl.masl.structure.StructurePackage;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each operation of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtuml.bp.xtext.masl.masl.types.TypesFactory
 * @model kind="package"
 *        annotation="http://www.eclipse.org/emf/2002/GenModel copyrightText='generated by Xtext 2.9.2' fileExtensions='mod,tr,ext,scn,al,int,svc,prj,fn' forceOverwrite='true' modelName='MASLTypes' updateClasspath='false' complianceLevel='6.0' basePackage='org.xtuml.bp.xtext.masl.masl'"
 * @generated
 */
public interface TypesPackage extends EPackage {
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "types";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "http://www.xtuml.org/bp/xtext/masl/MASLTypes";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "types";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	TypesPackage eINSTANCE = org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl.init();

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypeDeclarationImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getTypeDeclaration()
	 * @generated
	 */
	int TYPE_DECLARATION = 0;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION__PRAGMAS = StructurePackage.PRAGMATIZED__PRAGMAS;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION__NAME = StructurePackage.PRAGMATIZED_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Visibility</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION__VISIBILITY = StructurePackage.PRAGMATIZED_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Subtype</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION__SUBTYPE = StructurePackage.PRAGMATIZED_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Definition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION__DEFINITION = StructurePackage.PRAGMATIZED_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Type Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION_FEATURE_COUNT = StructurePackage.PRAGMATIZED_FEATURE_COUNT + 4;

	/**
	 * The number of operations of the '<em>Type Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_DECLARATION_OPERATION_COUNT = StructurePackage.PRAGMATIZED_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.TypeForwardDeclarationImpl <em>Type Forward Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypeForwardDeclarationImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getTypeForwardDeclaration()
	 * @generated
	 */
	int TYPE_FORWARD_DECLARATION = 1;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FORWARD_DECLARATION__NAME = StructurePackage.ABSTRACT_NAMED__NAME;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FORWARD_DECLARATION__PRAGMAS = StructurePackage.ABSTRACT_NAMED_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Visibility</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FORWARD_DECLARATION__VISIBILITY = StructurePackage.ABSTRACT_NAMED_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Subtype</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FORWARD_DECLARATION__SUBTYPE = StructurePackage.ABSTRACT_NAMED_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Type Forward Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FORWARD_DECLARATION_FEATURE_COUNT = StructurePackage.ABSTRACT_NAMED_FEATURE_COUNT + 3;

	/**
	 * The number of operations of the '<em>Type Forward Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPE_FORWARD_DECLARATION_OPERATION_COUNT = StructurePackage.ABSTRACT_NAMED_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.BuiltinTypeDeclarationImpl <em>Builtin Type Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.BuiltinTypeDeclarationImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getBuiltinTypeDeclaration()
	 * @generated
	 */
	int BUILTIN_TYPE_DECLARATION = 2;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION__PRAGMAS = TYPE_DECLARATION__PRAGMAS;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION__NAME = TYPE_DECLARATION__NAME;

	/**
	 * The feature id for the '<em><b>Visibility</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION__VISIBILITY = TYPE_DECLARATION__VISIBILITY;

	/**
	 * The feature id for the '<em><b>Subtype</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION__SUBTYPE = TYPE_DECLARATION__SUBTYPE;

	/**
	 * The feature id for the '<em><b>Definition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION__DEFINITION = TYPE_DECLARATION__DEFINITION;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION__ANONYMOUS = TYPE_DECLARATION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Builtin Type Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION_FEATURE_COUNT = TYPE_DECLARATION_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Builtin Type Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BUILTIN_TYPE_DECLARATION_OPERATION_COUNT = TYPE_DECLARATION_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeDefinitionImpl <em>Abstract Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeDefinitionImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractTypeDefinition()
	 * @generated
	 */
	int ABSTRACT_TYPE_DEFINITION = 4;

	/**
	 * The number of structural features of the '<em>Abstract Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT = 0;

	/**
	 * The number of operations of the '<em>Abstract Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_TYPE_DEFINITION_OPERATION_COUNT = 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeReferenceImpl <em>Abstract Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractTypeReference()
	 * @generated
	 */
	int ABSTRACT_TYPE_REFERENCE = 15;

	/**
	 * The number of structural features of the '<em>Abstract Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The number of operations of the '<em>Abstract Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_TYPE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.TerminatorTypeReferenceImpl <em>Terminator Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TerminatorTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getTerminatorTypeReference()
	 * @generated
	 */
	int TERMINATOR_TYPE_REFERENCE = 3;

	/**
	 * The feature id for the '<em><b>Terminator</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TERMINATOR_TYPE_REFERENCE__TERMINATOR = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Terminator Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TERMINATOR_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Terminator Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TERMINATOR_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedTypeDefinitionImpl <em>Constrained Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedTypeDefinitionImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getConstrainedTypeDefinition()
	 * @generated
	 */
	int CONSTRAINED_TYPE_DEFINITION = 5;

	/**
	 * The feature id for the '<em><b>Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_TYPE_DEFINITION__TYPE = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Constraint</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_TYPE_DEFINITION__CONSTRAINT = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Constrained Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_TYPE_DEFINITION_FEATURE_COUNT = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The number of operations of the '<em>Constrained Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_TYPE_DEFINITION_OPERATION_COUNT = ABSTRACT_TYPE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeConstraintImpl <em>Abstract Type Constraint</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeConstraintImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractTypeConstraint()
	 * @generated
	 */
	int ABSTRACT_TYPE_CONSTRAINT = 6;

	/**
	 * The number of structural features of the '<em>Abstract Type Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT = 0;

	/**
	 * The number of operations of the '<em>Abstract Type Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_TYPE_CONSTRAINT_OPERATION_COUNT = 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.RangeConstraintImpl <em>Range Constraint</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.RangeConstraintImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getRangeConstraint()
	 * @generated
	 */
	int RANGE_CONSTRAINT = 7;

	/**
	 * The feature id for the '<em><b>Range</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RANGE_CONSTRAINT__RANGE = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Range Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RANGE_CONSTRAINT_FEATURE_COUNT = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Range Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RANGE_CONSTRAINT_OPERATION_COUNT = ABSTRACT_TYPE_CONSTRAINT_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DeltaConstraintImpl <em>Delta Constraint</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DeltaConstraintImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDeltaConstraint()
	 * @generated
	 */
	int DELTA_CONSTRAINT = 8;

	/**
	 * The feature id for the '<em><b>Delta</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DELTA_CONSTRAINT__DELTA = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Constraint</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DELTA_CONSTRAINT__CONSTRAINT = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Delta Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DELTA_CONSTRAINT_FEATURE_COUNT = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 2;

	/**
	 * The number of operations of the '<em>Delta Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DELTA_CONSTRAINT_OPERATION_COUNT = ABSTRACT_TYPE_CONSTRAINT_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DigitsConstraintImpl <em>Digits Constraint</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DigitsConstraintImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDigitsConstraint()
	 * @generated
	 */
	int DIGITS_CONSTRAINT = 9;

	/**
	 * The feature id for the '<em><b>Digits</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DIGITS_CONSTRAINT__DIGITS = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Constraint</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DIGITS_CONSTRAINT__CONSTRAINT = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Digits Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DIGITS_CONSTRAINT_FEATURE_COUNT = ABSTRACT_TYPE_CONSTRAINT_FEATURE_COUNT + 2;

	/**
	 * The number of operations of the '<em>Digits Constraint</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DIGITS_CONSTRAINT_OPERATION_COUNT = ABSTRACT_TYPE_CONSTRAINT_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.StructureTypeDefinitionImpl <em>Structure Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.StructureTypeDefinitionImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getStructureTypeDefinition()
	 * @generated
	 */
	int STRUCTURE_TYPE_DEFINITION = 10;

	/**
	 * The feature id for the '<em><b>Components</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_TYPE_DEFINITION__COMPONENTS = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Structure Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_TYPE_DEFINITION_FEATURE_COUNT = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Structure Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_TYPE_DEFINITION_OPERATION_COUNT = ABSTRACT_TYPE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.StructureComponentDefinitionImpl <em>Structure Component Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.StructureComponentDefinitionImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getStructureComponentDefinition()
	 * @generated
	 */
	int STRUCTURE_COMPONENT_DEFINITION = 11;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_COMPONENT_DEFINITION__NAME = StructurePackage.ABSTRACT_FEATURE__NAME;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_COMPONENT_DEFINITION__PRAGMAS = StructurePackage.ABSTRACT_FEATURE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_COMPONENT_DEFINITION__TYPE = StructurePackage.ABSTRACT_FEATURE_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Default Value</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_COMPONENT_DEFINITION__DEFAULT_VALUE = StructurePackage.ABSTRACT_FEATURE_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Structure Component Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_COMPONENT_DEFINITION_FEATURE_COUNT = StructurePackage.ABSTRACT_FEATURE_FEATURE_COUNT + 3;

	/**
	 * The number of operations of the '<em>Structure Component Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRUCTURE_COMPONENT_DEFINITION_OPERATION_COUNT = StructurePackage.ABSTRACT_FEATURE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.EnumerationTypeDefinitionImpl <em>Enumeration Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.EnumerationTypeDefinitionImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getEnumerationTypeDefinition()
	 * @generated
	 */
	int ENUMERATION_TYPE_DEFINITION = 12;

	/**
	 * The feature id for the '<em><b>Enumerators</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_TYPE_DEFINITION__ENUMERATORS = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Enumeration Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_TYPE_DEFINITION_FEATURE_COUNT = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Enumeration Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_TYPE_DEFINITION_OPERATION_COUNT = ABSTRACT_TYPE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.EnumeratorImpl <em>Enumerator</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.EnumeratorImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getEnumerator()
	 * @generated
	 */
	int ENUMERATOR = 13;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATOR__NAME = StructurePackage.ABSTRACT_FEATURE__NAME;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATOR__EXPRESSION = StructurePackage.ABSTRACT_FEATURE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Enumerator</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATOR_FEATURE_COUNT = StructurePackage.ABSTRACT_FEATURE_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Enumerator</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATOR_OPERATION_COUNT = StructurePackage.ABSTRACT_FEATURE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.UnconstrainedArrayDefinitionImpl <em>Unconstrained Array Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.UnconstrainedArrayDefinitionImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getUnconstrainedArrayDefinition()
	 * @generated
	 */
	int UNCONSTRAINED_ARRAY_DEFINITION = 14;

	/**
	 * The feature id for the '<em><b>Index Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNCONSTRAINED_ARRAY_DEFINITION__INDEX_TYPE = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNCONSTRAINED_ARRAY_DEFINITION__ELEMENT_TYPE = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Unconstrained Array Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNCONSTRAINED_ARRAY_DEFINITION_FEATURE_COUNT = ABSTRACT_TYPE_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The number of operations of the '<em>Unconstrained Array Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNCONSTRAINED_ARRAY_DEFINITION_OPERATION_COUNT = ABSTRACT_TYPE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DeprecatedTypeReferenceImpl <em>Deprecated Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DeprecatedTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDeprecatedTypeReference()
	 * @generated
	 */
	int DEPRECATED_TYPE_REFERENCE = 16;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DEPRECATED_TYPE_REFERENCE__TYPE_NAME = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Deprecated Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DEPRECATED_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Deprecated Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DEPRECATED_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.InstanceTypeReferenceImpl <em>Instance Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.InstanceTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getInstanceTypeReference()
	 * @generated
	 */
	int INSTANCE_TYPE_REFERENCE = 17;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_TYPE_REFERENCE__PRAGMAS = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Instance</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_TYPE_REFERENCE__INSTANCE = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Instance Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 3;

	/**
	 * The number of operations of the '<em>Instance Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.NamedTypeReferenceImpl <em>Named Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.NamedTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getNamedTypeReference()
	 * @generated
	 */
	int NAMED_TYPE_REFERENCE = 18;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TYPE_REFERENCE__TYPE = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Named Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 2;

	/**
	 * The number of operations of the '<em>Named Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedArrayTypeReferenceImpl <em>Constrained Array Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedArrayTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getConstrainedArrayTypeReference()
	 * @generated
	 */
	int CONSTRAINED_ARRAY_TYPE_REFERENCE = 19;

	/**
	 * The feature id for the '<em><b>Unconstrained</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_ARRAY_TYPE_REFERENCE__UNCONSTRAINED = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Constraint</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_ARRAY_TYPE_REFERENCE__CONSTRAINT = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Constrained Array Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_ARRAY_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 2;

	/**
	 * The number of operations of the '<em>Constrained Array Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONSTRAINED_ARRAY_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractCollectionTypeReferenceImpl <em>Abstract Collection Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractCollectionTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractCollectionTypeReference()
	 * @generated
	 */
	int ABSTRACT_COLLECTION_TYPE_REFERENCE = 20;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_COLLECTION_TYPE_REFERENCE__PRAGMAS = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_COLLECTION_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_COLLECTION_TYPE_REFERENCE__ELEMENT_TYPE = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Abstract Collection Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_TYPE_REFERENCE_FEATURE_COUNT + 3;

	/**
	 * The number of operations of the '<em>Abstract Collection Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ABSTRACT_COLLECTION_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.SequenceTypeReferenceImpl <em>Sequence Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.SequenceTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getSequenceTypeReference()
	 * @generated
	 */
	int SEQUENCE_TYPE_REFERENCE = 21;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_TYPE_REFERENCE__PRAGMAS = ABSTRACT_COLLECTION_TYPE_REFERENCE__PRAGMAS;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_COLLECTION_TYPE_REFERENCE__ANONYMOUS;

	/**
	 * The feature id for the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_TYPE_REFERENCE__ELEMENT_TYPE = ABSTRACT_COLLECTION_TYPE_REFERENCE__ELEMENT_TYPE;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_TYPE_REFERENCE__EXPRESSION = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Sequence Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Sequence Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.ArrayTypeReferenceImpl <em>Array Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.ArrayTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getArrayTypeReference()
	 * @generated
	 */
	int ARRAY_TYPE_REFERENCE = 22;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARRAY_TYPE_REFERENCE__PRAGMAS = ABSTRACT_COLLECTION_TYPE_REFERENCE__PRAGMAS;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARRAY_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_COLLECTION_TYPE_REFERENCE__ANONYMOUS;

	/**
	 * The feature id for the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARRAY_TYPE_REFERENCE__ELEMENT_TYPE = ABSTRACT_COLLECTION_TYPE_REFERENCE__ELEMENT_TYPE;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARRAY_TYPE_REFERENCE__EXPRESSION = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Index Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARRAY_TYPE_REFERENCE__INDEX_TYPE = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Array Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARRAY_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 2;

	/**
	 * The number of operations of the '<em>Array Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARRAY_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.SetTypeReferenceImpl <em>Set Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.SetTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getSetTypeReference()
	 * @generated
	 */
	int SET_TYPE_REFERENCE = 23;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SET_TYPE_REFERENCE__PRAGMAS = ABSTRACT_COLLECTION_TYPE_REFERENCE__PRAGMAS;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SET_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_COLLECTION_TYPE_REFERENCE__ANONYMOUS;

	/**
	 * The feature id for the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SET_TYPE_REFERENCE__ELEMENT_TYPE = ABSTRACT_COLLECTION_TYPE_REFERENCE__ELEMENT_TYPE;

	/**
	 * The number of structural features of the '<em>Set Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SET_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of operations of the '<em>Set Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SET_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.BagTypeReferenceImpl <em>Bag Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.BagTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getBagTypeReference()
	 * @generated
	 */
	int BAG_TYPE_REFERENCE = 24;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BAG_TYPE_REFERENCE__PRAGMAS = ABSTRACT_COLLECTION_TYPE_REFERENCE__PRAGMAS;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BAG_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_COLLECTION_TYPE_REFERENCE__ANONYMOUS;

	/**
	 * The feature id for the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BAG_TYPE_REFERENCE__ELEMENT_TYPE = ABSTRACT_COLLECTION_TYPE_REFERENCE__ELEMENT_TYPE;

	/**
	 * The number of structural features of the '<em>Bag Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BAG_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of operations of the '<em>Bag Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BAG_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DictionaryTypeReferenceImpl <em>Dictionary Type Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DictionaryTypeReferenceImpl
	 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDictionaryTypeReference()
	 * @generated
	 */
	int DICTIONARY_TYPE_REFERENCE = 25;

	/**
	 * The feature id for the '<em><b>Pragmas</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DICTIONARY_TYPE_REFERENCE__PRAGMAS = ABSTRACT_COLLECTION_TYPE_REFERENCE__PRAGMAS;

	/**
	 * The feature id for the '<em><b>Anonymous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DICTIONARY_TYPE_REFERENCE__ANONYMOUS = ABSTRACT_COLLECTION_TYPE_REFERENCE__ANONYMOUS;

	/**
	 * The feature id for the '<em><b>Element Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DICTIONARY_TYPE_REFERENCE__ELEMENT_TYPE = ABSTRACT_COLLECTION_TYPE_REFERENCE__ELEMENT_TYPE;

	/**
	 * The feature id for the '<em><b>Key Type</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DICTIONARY_TYPE_REFERENCE__KEY_TYPE = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Dictionary Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DICTIONARY_TYPE_REFERENCE_FEATURE_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of operations of the '<em>Dictionary Type Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DICTIONARY_TYPE_REFERENCE_OPERATION_COUNT = ABSTRACT_COLLECTION_TYPE_REFERENCE_OPERATION_COUNT + 0;


	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration <em>Type Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Declaration</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration
	 * @generated
	 */
	EClass getTypeDeclaration();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration#getVisibility <em>Visibility</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Visibility</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration#getVisibility()
	 * @see #getTypeDeclaration()
	 * @generated
	 */
	EAttribute getTypeDeclaration_Visibility();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration#isSubtype <em>Subtype</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Subtype</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration#isSubtype()
	 * @see #getTypeDeclaration()
	 * @generated
	 */
	EAttribute getTypeDeclaration_Subtype();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration#getDefinition <em>Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Definition</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypeDeclaration#getDefinition()
	 * @see #getTypeDeclaration()
	 * @generated
	 */
	EReference getTypeDeclaration_Definition();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.TypeForwardDeclaration <em>Type Forward Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Type Forward Declaration</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypeForwardDeclaration
	 * @generated
	 */
	EClass getTypeForwardDeclaration();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.TypeForwardDeclaration#getVisibility <em>Visibility</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Visibility</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypeForwardDeclaration#getVisibility()
	 * @see #getTypeForwardDeclaration()
	 * @generated
	 */
	EAttribute getTypeForwardDeclaration_Visibility();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.TypeForwardDeclaration#isSubtype <em>Subtype</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Subtype</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TypeForwardDeclaration#isSubtype()
	 * @see #getTypeForwardDeclaration()
	 * @generated
	 */
	EAttribute getTypeForwardDeclaration_Subtype();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.BuiltinTypeDeclaration <em>Builtin Type Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Builtin Type Declaration</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.BuiltinTypeDeclaration
	 * @generated
	 */
	EClass getBuiltinTypeDeclaration();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.BuiltinTypeDeclaration#isAnonymous <em>Anonymous</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Anonymous</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.BuiltinTypeDeclaration#isAnonymous()
	 * @see #getBuiltinTypeDeclaration()
	 * @generated
	 */
	EAttribute getBuiltinTypeDeclaration_Anonymous();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.TerminatorTypeReference <em>Terminator Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Terminator Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TerminatorTypeReference
	 * @generated
	 */
	EClass getTerminatorTypeReference();

	/**
	 * Returns the meta object for the reference '{@link org.xtuml.bp.xtext.masl.masl.types.TerminatorTypeReference#getTerminator <em>Terminator</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Terminator</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.TerminatorTypeReference#getTerminator()
	 * @see #getTerminatorTypeReference()
	 * @generated
	 */
	EReference getTerminatorTypeReference_Terminator();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractTypeDefinition <em>Abstract Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Abstract Type Definition</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.AbstractTypeDefinition
	 * @generated
	 */
	EClass getAbstractTypeDefinition();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.ConstrainedTypeDefinition <em>Constrained Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Constrained Type Definition</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ConstrainedTypeDefinition
	 * @generated
	 */
	EClass getConstrainedTypeDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.ConstrainedTypeDefinition#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ConstrainedTypeDefinition#getType()
	 * @see #getConstrainedTypeDefinition()
	 * @generated
	 */
	EReference getConstrainedTypeDefinition_Type();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.ConstrainedTypeDefinition#getConstraint <em>Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ConstrainedTypeDefinition#getConstraint()
	 * @see #getConstrainedTypeDefinition()
	 * @generated
	 */
	EReference getConstrainedTypeDefinition_Constraint();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractTypeConstraint <em>Abstract Type Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Abstract Type Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.AbstractTypeConstraint
	 * @generated
	 */
	EClass getAbstractTypeConstraint();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.RangeConstraint <em>Range Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Range Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.RangeConstraint
	 * @generated
	 */
	EClass getRangeConstraint();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.RangeConstraint#getRange <em>Range</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Range</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.RangeConstraint#getRange()
	 * @see #getRangeConstraint()
	 * @generated
	 */
	EReference getRangeConstraint_Range();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.DeltaConstraint <em>Delta Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Delta Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DeltaConstraint
	 * @generated
	 */
	EClass getDeltaConstraint();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.DeltaConstraint#getDelta <em>Delta</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Delta</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DeltaConstraint#getDelta()
	 * @see #getDeltaConstraint()
	 * @generated
	 */
	EReference getDeltaConstraint_Delta();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.DeltaConstraint#getConstraint <em>Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DeltaConstraint#getConstraint()
	 * @see #getDeltaConstraint()
	 * @generated
	 */
	EReference getDeltaConstraint_Constraint();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.DigitsConstraint <em>Digits Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Digits Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DigitsConstraint
	 * @generated
	 */
	EClass getDigitsConstraint();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.DigitsConstraint#getDigits <em>Digits</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Digits</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DigitsConstraint#getDigits()
	 * @see #getDigitsConstraint()
	 * @generated
	 */
	EReference getDigitsConstraint_Digits();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.DigitsConstraint#getConstraint <em>Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DigitsConstraint#getConstraint()
	 * @see #getDigitsConstraint()
	 * @generated
	 */
	EReference getDigitsConstraint_Constraint();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.StructureTypeDefinition <em>Structure Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Structure Type Definition</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.StructureTypeDefinition
	 * @generated
	 */
	EClass getStructureTypeDefinition();

	/**
	 * Returns the meta object for the containment reference list '{@link org.xtuml.bp.xtext.masl.masl.types.StructureTypeDefinition#getComponents <em>Components</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Components</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.StructureTypeDefinition#getComponents()
	 * @see #getStructureTypeDefinition()
	 * @generated
	 */
	EReference getStructureTypeDefinition_Components();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.StructureComponentDefinition <em>Structure Component Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Structure Component Definition</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.StructureComponentDefinition
	 * @generated
	 */
	EClass getStructureComponentDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.StructureComponentDefinition#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.StructureComponentDefinition#getType()
	 * @see #getStructureComponentDefinition()
	 * @generated
	 */
	EReference getStructureComponentDefinition_Type();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.StructureComponentDefinition#getDefaultValue <em>Default Value</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Default Value</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.StructureComponentDefinition#getDefaultValue()
	 * @see #getStructureComponentDefinition()
	 * @generated
	 */
	EReference getStructureComponentDefinition_DefaultValue();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.EnumerationTypeDefinition <em>Enumeration Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Enumeration Type Definition</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.EnumerationTypeDefinition
	 * @generated
	 */
	EClass getEnumerationTypeDefinition();

	/**
	 * Returns the meta object for the containment reference list '{@link org.xtuml.bp.xtext.masl.masl.types.EnumerationTypeDefinition#getEnumerators <em>Enumerators</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Enumerators</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.EnumerationTypeDefinition#getEnumerators()
	 * @see #getEnumerationTypeDefinition()
	 * @generated
	 */
	EReference getEnumerationTypeDefinition_Enumerators();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.Enumerator <em>Enumerator</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Enumerator</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.Enumerator
	 * @generated
	 */
	EClass getEnumerator();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.Enumerator#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.Enumerator#getExpression()
	 * @see #getEnumerator()
	 * @generated
	 */
	EReference getEnumerator_Expression();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.UnconstrainedArrayDefinition <em>Unconstrained Array Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Unconstrained Array Definition</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.UnconstrainedArrayDefinition
	 * @generated
	 */
	EClass getUnconstrainedArrayDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.UnconstrainedArrayDefinition#getIndexType <em>Index Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Index Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.UnconstrainedArrayDefinition#getIndexType()
	 * @see #getUnconstrainedArrayDefinition()
	 * @generated
	 */
	EReference getUnconstrainedArrayDefinition_IndexType();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.UnconstrainedArrayDefinition#getElementType <em>Element Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Element Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.UnconstrainedArrayDefinition#getElementType()
	 * @see #getUnconstrainedArrayDefinition()
	 * @generated
	 */
	EReference getUnconstrainedArrayDefinition_ElementType();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractTypeReference <em>Abstract Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Abstract Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.AbstractTypeReference
	 * @generated
	 */
	EClass getAbstractTypeReference();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.DeprecatedTypeReference <em>Deprecated Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Deprecated Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DeprecatedTypeReference
	 * @generated
	 */
	EClass getDeprecatedTypeReference();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.DeprecatedTypeReference#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Type Name</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DeprecatedTypeReference#getTypeName()
	 * @see #getDeprecatedTypeReference()
	 * @generated
	 */
	EAttribute getDeprecatedTypeReference_TypeName();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.InstanceTypeReference <em>Instance Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Instance Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.InstanceTypeReference
	 * @generated
	 */
	EClass getInstanceTypeReference();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.InstanceTypeReference#isAnonymous <em>Anonymous</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Anonymous</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.InstanceTypeReference#isAnonymous()
	 * @see #getInstanceTypeReference()
	 * @generated
	 */
	EAttribute getInstanceTypeReference_Anonymous();

	/**
	 * Returns the meta object for the reference '{@link org.xtuml.bp.xtext.masl.masl.types.InstanceTypeReference#getInstance <em>Instance</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Instance</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.InstanceTypeReference#getInstance()
	 * @see #getInstanceTypeReference()
	 * @generated
	 */
	EReference getInstanceTypeReference_Instance();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.NamedTypeReference <em>Named Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Named Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.NamedTypeReference
	 * @generated
	 */
	EClass getNamedTypeReference();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.NamedTypeReference#isAnonymous <em>Anonymous</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Anonymous</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.NamedTypeReference#isAnonymous()
	 * @see #getNamedTypeReference()
	 * @generated
	 */
	EAttribute getNamedTypeReference_Anonymous();

	/**
	 * Returns the meta object for the reference '{@link org.xtuml.bp.xtext.masl.masl.types.NamedTypeReference#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.NamedTypeReference#getType()
	 * @see #getNamedTypeReference()
	 * @generated
	 */
	EReference getNamedTypeReference_Type();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.ConstrainedArrayTypeReference <em>Constrained Array Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Constrained Array Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ConstrainedArrayTypeReference
	 * @generated
	 */
	EClass getConstrainedArrayTypeReference();

	/**
	 * Returns the meta object for the reference '{@link org.xtuml.bp.xtext.masl.masl.types.ConstrainedArrayTypeReference#getUnconstrained <em>Unconstrained</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Unconstrained</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ConstrainedArrayTypeReference#getUnconstrained()
	 * @see #getConstrainedArrayTypeReference()
	 * @generated
	 */
	EReference getConstrainedArrayTypeReference_Unconstrained();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.ConstrainedArrayTypeReference#getConstraint <em>Constraint</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Constraint</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ConstrainedArrayTypeReference#getConstraint()
	 * @see #getConstrainedArrayTypeReference()
	 * @generated
	 */
	EReference getConstrainedArrayTypeReference_Constraint();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference <em>Abstract Collection Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Abstract Collection Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference
	 * @generated
	 */
	EClass getAbstractCollectionTypeReference();

	/**
	 * Returns the meta object for the attribute '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#isAnonymous <em>Anonymous</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Anonymous</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#isAnonymous()
	 * @see #getAbstractCollectionTypeReference()
	 * @generated
	 */
	EAttribute getAbstractCollectionTypeReference_Anonymous();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#getElementType <em>Element Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Element Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.AbstractCollectionTypeReference#getElementType()
	 * @see #getAbstractCollectionTypeReference()
	 * @generated
	 */
	EReference getAbstractCollectionTypeReference_ElementType();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.SequenceTypeReference <em>Sequence Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.SequenceTypeReference
	 * @generated
	 */
	EClass getSequenceTypeReference();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.SequenceTypeReference#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.SequenceTypeReference#getExpression()
	 * @see #getSequenceTypeReference()
	 * @generated
	 */
	EReference getSequenceTypeReference_Expression();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.ArrayTypeReference <em>Array Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Array Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ArrayTypeReference
	 * @generated
	 */
	EClass getArrayTypeReference();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.ArrayTypeReference#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ArrayTypeReference#getExpression()
	 * @see #getArrayTypeReference()
	 * @generated
	 */
	EReference getArrayTypeReference_Expression();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.ArrayTypeReference#getIndexType <em>Index Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Index Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.ArrayTypeReference#getIndexType()
	 * @see #getArrayTypeReference()
	 * @generated
	 */
	EReference getArrayTypeReference_IndexType();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.SetTypeReference <em>Set Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Set Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.SetTypeReference
	 * @generated
	 */
	EClass getSetTypeReference();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.BagTypeReference <em>Bag Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Bag Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.BagTypeReference
	 * @generated
	 */
	EClass getBagTypeReference();

	/**
	 * Returns the meta object for class '{@link org.xtuml.bp.xtext.masl.masl.types.DictionaryTypeReference <em>Dictionary Type Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Dictionary Type Reference</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DictionaryTypeReference
	 * @generated
	 */
	EClass getDictionaryTypeReference();

	/**
	 * Returns the meta object for the containment reference '{@link org.xtuml.bp.xtext.masl.masl.types.DictionaryTypeReference#getKeyType <em>Key Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Key Type</em>'.
	 * @see org.xtuml.bp.xtext.masl.masl.types.DictionaryTypeReference#getKeyType()
	 * @see #getDictionaryTypeReference()
	 * @generated
	 */
	EReference getDictionaryTypeReference_KeyType();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	TypesFactory getTypesFactory();

	/**
	 * <!-- begin-user-doc -->
	 * Defines literals for the meta objects that represent
	 * <ul>
	 *   <li>each class,</li>
	 *   <li>each feature of each class,</li>
	 *   <li>each operation of each class,</li>
	 *   <li>each enum,</li>
	 *   <li>and each data type</li>
	 * </ul>
	 * <!-- end-user-doc -->
	 * @generated
	 */
	interface Literals {
		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.TypeDeclarationImpl <em>Type Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypeDeclarationImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getTypeDeclaration()
		 * @generated
		 */
		EClass TYPE_DECLARATION = eINSTANCE.getTypeDeclaration();

		/**
		 * The meta object literal for the '<em><b>Visibility</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute TYPE_DECLARATION__VISIBILITY = eINSTANCE.getTypeDeclaration_Visibility();

		/**
		 * The meta object literal for the '<em><b>Subtype</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute TYPE_DECLARATION__SUBTYPE = eINSTANCE.getTypeDeclaration_Subtype();

		/**
		 * The meta object literal for the '<em><b>Definition</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TYPE_DECLARATION__DEFINITION = eINSTANCE.getTypeDeclaration_Definition();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.TypeForwardDeclarationImpl <em>Type Forward Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypeForwardDeclarationImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getTypeForwardDeclaration()
		 * @generated
		 */
		EClass TYPE_FORWARD_DECLARATION = eINSTANCE.getTypeForwardDeclaration();

		/**
		 * The meta object literal for the '<em><b>Visibility</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute TYPE_FORWARD_DECLARATION__VISIBILITY = eINSTANCE.getTypeForwardDeclaration_Visibility();

		/**
		 * The meta object literal for the '<em><b>Subtype</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute TYPE_FORWARD_DECLARATION__SUBTYPE = eINSTANCE.getTypeForwardDeclaration_Subtype();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.BuiltinTypeDeclarationImpl <em>Builtin Type Declaration</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.BuiltinTypeDeclarationImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getBuiltinTypeDeclaration()
		 * @generated
		 */
		EClass BUILTIN_TYPE_DECLARATION = eINSTANCE.getBuiltinTypeDeclaration();

		/**
		 * The meta object literal for the '<em><b>Anonymous</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute BUILTIN_TYPE_DECLARATION__ANONYMOUS = eINSTANCE.getBuiltinTypeDeclaration_Anonymous();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.TerminatorTypeReferenceImpl <em>Terminator Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TerminatorTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getTerminatorTypeReference()
		 * @generated
		 */
		EClass TERMINATOR_TYPE_REFERENCE = eINSTANCE.getTerminatorTypeReference();

		/**
		 * The meta object literal for the '<em><b>Terminator</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference TERMINATOR_TYPE_REFERENCE__TERMINATOR = eINSTANCE.getTerminatorTypeReference_Terminator();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeDefinitionImpl <em>Abstract Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeDefinitionImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractTypeDefinition()
		 * @generated
		 */
		EClass ABSTRACT_TYPE_DEFINITION = eINSTANCE.getAbstractTypeDefinition();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedTypeDefinitionImpl <em>Constrained Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedTypeDefinitionImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getConstrainedTypeDefinition()
		 * @generated
		 */
		EClass CONSTRAINED_TYPE_DEFINITION = eINSTANCE.getConstrainedTypeDefinition();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONSTRAINED_TYPE_DEFINITION__TYPE = eINSTANCE.getConstrainedTypeDefinition_Type();

		/**
		 * The meta object literal for the '<em><b>Constraint</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONSTRAINED_TYPE_DEFINITION__CONSTRAINT = eINSTANCE.getConstrainedTypeDefinition_Constraint();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeConstraintImpl <em>Abstract Type Constraint</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeConstraintImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractTypeConstraint()
		 * @generated
		 */
		EClass ABSTRACT_TYPE_CONSTRAINT = eINSTANCE.getAbstractTypeConstraint();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.RangeConstraintImpl <em>Range Constraint</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.RangeConstraintImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getRangeConstraint()
		 * @generated
		 */
		EClass RANGE_CONSTRAINT = eINSTANCE.getRangeConstraint();

		/**
		 * The meta object literal for the '<em><b>Range</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference RANGE_CONSTRAINT__RANGE = eINSTANCE.getRangeConstraint_Range();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DeltaConstraintImpl <em>Delta Constraint</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DeltaConstraintImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDeltaConstraint()
		 * @generated
		 */
		EClass DELTA_CONSTRAINT = eINSTANCE.getDeltaConstraint();

		/**
		 * The meta object literal for the '<em><b>Delta</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DELTA_CONSTRAINT__DELTA = eINSTANCE.getDeltaConstraint_Delta();

		/**
		 * The meta object literal for the '<em><b>Constraint</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DELTA_CONSTRAINT__CONSTRAINT = eINSTANCE.getDeltaConstraint_Constraint();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DigitsConstraintImpl <em>Digits Constraint</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DigitsConstraintImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDigitsConstraint()
		 * @generated
		 */
		EClass DIGITS_CONSTRAINT = eINSTANCE.getDigitsConstraint();

		/**
		 * The meta object literal for the '<em><b>Digits</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DIGITS_CONSTRAINT__DIGITS = eINSTANCE.getDigitsConstraint_Digits();

		/**
		 * The meta object literal for the '<em><b>Constraint</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DIGITS_CONSTRAINT__CONSTRAINT = eINSTANCE.getDigitsConstraint_Constraint();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.StructureTypeDefinitionImpl <em>Structure Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.StructureTypeDefinitionImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getStructureTypeDefinition()
		 * @generated
		 */
		EClass STRUCTURE_TYPE_DEFINITION = eINSTANCE.getStructureTypeDefinition();

		/**
		 * The meta object literal for the '<em><b>Components</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference STRUCTURE_TYPE_DEFINITION__COMPONENTS = eINSTANCE.getStructureTypeDefinition_Components();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.StructureComponentDefinitionImpl <em>Structure Component Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.StructureComponentDefinitionImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getStructureComponentDefinition()
		 * @generated
		 */
		EClass STRUCTURE_COMPONENT_DEFINITION = eINSTANCE.getStructureComponentDefinition();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference STRUCTURE_COMPONENT_DEFINITION__TYPE = eINSTANCE.getStructureComponentDefinition_Type();

		/**
		 * The meta object literal for the '<em><b>Default Value</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference STRUCTURE_COMPONENT_DEFINITION__DEFAULT_VALUE = eINSTANCE.getStructureComponentDefinition_DefaultValue();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.EnumerationTypeDefinitionImpl <em>Enumeration Type Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.EnumerationTypeDefinitionImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getEnumerationTypeDefinition()
		 * @generated
		 */
		EClass ENUMERATION_TYPE_DEFINITION = eINSTANCE.getEnumerationTypeDefinition();

		/**
		 * The meta object literal for the '<em><b>Enumerators</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference ENUMERATION_TYPE_DEFINITION__ENUMERATORS = eINSTANCE.getEnumerationTypeDefinition_Enumerators();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.EnumeratorImpl <em>Enumerator</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.EnumeratorImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getEnumerator()
		 * @generated
		 */
		EClass ENUMERATOR = eINSTANCE.getEnumerator();

		/**
		 * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference ENUMERATOR__EXPRESSION = eINSTANCE.getEnumerator_Expression();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.UnconstrainedArrayDefinitionImpl <em>Unconstrained Array Definition</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.UnconstrainedArrayDefinitionImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getUnconstrainedArrayDefinition()
		 * @generated
		 */
		EClass UNCONSTRAINED_ARRAY_DEFINITION = eINSTANCE.getUnconstrainedArrayDefinition();

		/**
		 * The meta object literal for the '<em><b>Index Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference UNCONSTRAINED_ARRAY_DEFINITION__INDEX_TYPE = eINSTANCE.getUnconstrainedArrayDefinition_IndexType();

		/**
		 * The meta object literal for the '<em><b>Element Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference UNCONSTRAINED_ARRAY_DEFINITION__ELEMENT_TYPE = eINSTANCE.getUnconstrainedArrayDefinition_ElementType();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeReferenceImpl <em>Abstract Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractTypeReference()
		 * @generated
		 */
		EClass ABSTRACT_TYPE_REFERENCE = eINSTANCE.getAbstractTypeReference();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DeprecatedTypeReferenceImpl <em>Deprecated Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DeprecatedTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDeprecatedTypeReference()
		 * @generated
		 */
		EClass DEPRECATED_TYPE_REFERENCE = eINSTANCE.getDeprecatedTypeReference();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute DEPRECATED_TYPE_REFERENCE__TYPE_NAME = eINSTANCE.getDeprecatedTypeReference_TypeName();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.InstanceTypeReferenceImpl <em>Instance Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.InstanceTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getInstanceTypeReference()
		 * @generated
		 */
		EClass INSTANCE_TYPE_REFERENCE = eINSTANCE.getInstanceTypeReference();

		/**
		 * The meta object literal for the '<em><b>Anonymous</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute INSTANCE_TYPE_REFERENCE__ANONYMOUS = eINSTANCE.getInstanceTypeReference_Anonymous();

		/**
		 * The meta object literal for the '<em><b>Instance</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference INSTANCE_TYPE_REFERENCE__INSTANCE = eINSTANCE.getInstanceTypeReference_Instance();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.NamedTypeReferenceImpl <em>Named Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.NamedTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getNamedTypeReference()
		 * @generated
		 */
		EClass NAMED_TYPE_REFERENCE = eINSTANCE.getNamedTypeReference();

		/**
		 * The meta object literal for the '<em><b>Anonymous</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute NAMED_TYPE_REFERENCE__ANONYMOUS = eINSTANCE.getNamedTypeReference_Anonymous();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference NAMED_TYPE_REFERENCE__TYPE = eINSTANCE.getNamedTypeReference_Type();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedArrayTypeReferenceImpl <em>Constrained Array Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.ConstrainedArrayTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getConstrainedArrayTypeReference()
		 * @generated
		 */
		EClass CONSTRAINED_ARRAY_TYPE_REFERENCE = eINSTANCE.getConstrainedArrayTypeReference();

		/**
		 * The meta object literal for the '<em><b>Unconstrained</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONSTRAINED_ARRAY_TYPE_REFERENCE__UNCONSTRAINED = eINSTANCE.getConstrainedArrayTypeReference_Unconstrained();

		/**
		 * The meta object literal for the '<em><b>Constraint</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference CONSTRAINED_ARRAY_TYPE_REFERENCE__CONSTRAINT = eINSTANCE.getConstrainedArrayTypeReference_Constraint();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.AbstractCollectionTypeReferenceImpl <em>Abstract Collection Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.AbstractCollectionTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getAbstractCollectionTypeReference()
		 * @generated
		 */
		EClass ABSTRACT_COLLECTION_TYPE_REFERENCE = eINSTANCE.getAbstractCollectionTypeReference();

		/**
		 * The meta object literal for the '<em><b>Anonymous</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute ABSTRACT_COLLECTION_TYPE_REFERENCE__ANONYMOUS = eINSTANCE.getAbstractCollectionTypeReference_Anonymous();

		/**
		 * The meta object literal for the '<em><b>Element Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference ABSTRACT_COLLECTION_TYPE_REFERENCE__ELEMENT_TYPE = eINSTANCE.getAbstractCollectionTypeReference_ElementType();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.SequenceTypeReferenceImpl <em>Sequence Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.SequenceTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getSequenceTypeReference()
		 * @generated
		 */
		EClass SEQUENCE_TYPE_REFERENCE = eINSTANCE.getSequenceTypeReference();

		/**
		 * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference SEQUENCE_TYPE_REFERENCE__EXPRESSION = eINSTANCE.getSequenceTypeReference_Expression();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.ArrayTypeReferenceImpl <em>Array Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.ArrayTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getArrayTypeReference()
		 * @generated
		 */
		EClass ARRAY_TYPE_REFERENCE = eINSTANCE.getArrayTypeReference();

		/**
		 * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference ARRAY_TYPE_REFERENCE__EXPRESSION = eINSTANCE.getArrayTypeReference_Expression();

		/**
		 * The meta object literal for the '<em><b>Index Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference ARRAY_TYPE_REFERENCE__INDEX_TYPE = eINSTANCE.getArrayTypeReference_IndexType();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.SetTypeReferenceImpl <em>Set Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.SetTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getSetTypeReference()
		 * @generated
		 */
		EClass SET_TYPE_REFERENCE = eINSTANCE.getSetTypeReference();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.BagTypeReferenceImpl <em>Bag Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.BagTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getBagTypeReference()
		 * @generated
		 */
		EClass BAG_TYPE_REFERENCE = eINSTANCE.getBagTypeReference();

		/**
		 * The meta object literal for the '{@link org.xtuml.bp.xtext.masl.masl.types.impl.DictionaryTypeReferenceImpl <em>Dictionary Type Reference</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.DictionaryTypeReferenceImpl
		 * @see org.xtuml.bp.xtext.masl.masl.types.impl.TypesPackageImpl#getDictionaryTypeReference()
		 * @generated
		 */
		EClass DICTIONARY_TYPE_REFERENCE = eINSTANCE.getDictionaryTypeReference();

		/**
		 * The meta object literal for the '<em><b>Key Type</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DICTIONARY_TYPE_REFERENCE__KEY_TYPE = eINSTANCE.getDictionaryTypeReference_KeyType();

	}

} //TypesPackage
